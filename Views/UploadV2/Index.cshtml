@model IEnumerable<InfoWithURL>
@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="container">
    <div class="jumbotron">
        Upload:
        @using (Html.BeginForm("index", "UploadV2", FormMethod.Post, new { enctype = "multipart/form-data", id = "uploadform" }))
        {
        <div class="form-group">
            <div class="form-group">

                @*<a class="button actionSelect">
            <input type="file" id="select" value="Choose Image" accept="image/*">
        </a>

        <div class="form-group">
            <img id="croppedImage" alt="Cropped Image" class="rounded img-thumbnail" />

        </div>*@
                <div class="form-group">
                    <label>Image Name:</label>
                    <input id="ImageName" required type="text" class="form-control">
                </div>

                <div class="card" style="width: 18rem;">
                    <img class="card-img-top rounded img-thumbnail" id="croppedImage" alt="Passport Picture">
                    <div class="card-body">
                        <h5 class="card-title">Passport Picture</h5>
                        <p class="card-text">Please choose a picture to start cropping to fulfil requirements. </p>
                        <a class="button actionSelect">
                            <input type="file" id="select" value="Choose Image" accept="image/*">
                        </a>
                    </div>
                </div>
            </div>

            <div class="form-group">
                <label>Name:</label>
                <input id="Name" required type="text" class="form-control">
            </div>
            <div class="form-group">
                <label>Age:</label>
                <input id="Age" required type="number" class="form-control">
            </div>
            <div class="modal" id="cropmodel">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h4 class="modal-title">Modal Heading</h4>
                            <button type="button" class="close" data-dismiss="modal">&times;</button>
                        </div>
                        <div class="modal-body">
                            <div id="main-cropper"></div>
                        </div>
                        <div class="modal-footer">
                            <button type="button" id="btnCrop" class="btn btn-danger" data-dismiss="modal">Crop</button>
                        </div>
                    </div>
                </div>
            </div>

            <br />
            <input type="submit" class="btn btn-primary btn-block actionUpload" name="Submit" id="Submit" value="Upload" />
        </div>
        }
    </div>
</div>


<div class="border-top my-3"></div>
<br />
@*<div class="breadcrumb">Server Files</div>
    <div class="container">
        <table class="table table-dark table-hover">
            <thead>
                <tr>
                    <th>Index</th>
                    <th>Name</th>
                    <th>Size</th>

                </tr>
            </thead>
            <tbody>
                @{ int index = 0;}
                @foreach (var item in Model)
                {
                    index++;
                <tr>

                    <td>@index.ToString()</td>
                    <td>@item.Name</td>
                    <td>@(item.Length / 1024) kb</td>
                </tr>
                }
            </tbody>
        </table>
    </div>*@

@section scripts {
    <script>
        $('#select').prop('disabled', true);

        $('#ImageName').change(function () {
            if ($('#ImageName').val().trim() != "") {
               $('#select').prop('disabled', false);
            }
        });
    </script>

    <script>
           var basic = $('#main-cropper').croppie({
	        viewport: {
		        width: 200,
		        height: 300
	        },
	        boundary: {
		        width: 300,
		        height: 400
	        },
	        showZoomer: true
        });

        var file;

        function readFile(input) {

	        if (input.files && input.files[0]) {
		        var reader = new FileReader();

		        reader.onload = function (e) {
			        $('#main-cropper').croppie('bind', {
				        url: e.target.result
			        });
		        }

		        reader.readAsDataURL(input.files[0]);
	        }
        }

        $('#btnCrop').click(function () {

	        $('#main-cropper').croppie('result', 'blob').then(function (blob) {

		        file = new File([blob], $('#ImageName').val(), {
			        lastModified: new Date()
		        });
		        $('#croppedImage').attr('src', URL.createObjectURL(blob, {
			        oneTimeOnly: true
		        }));

	        });
        });
        $('.actionSelect input').on('change', function () {
	        $('#cropmodel').modal('show');
	        readFile(this);
        });

        function getExtension(filePath) {
	        return $('#ImageName').val() + "." + filePath.substr(filePath.lastIndexOf('\\') + 1).split('.')[1];
        };

        $('#uploadform').submit(function (e) {
	        e.preventDefault(); // stop the standard form submission

	        $('#main-cropper').croppie('result', 'blob').then(function (blob) {
                var formData = new FormData();
                var image = getExtension($("#select").val());
		        formData.append('Name', image );
		        formData.append('image', file);


		        $.ajax({
			        url: '@Url.Action("Index","UploadV2")',
			        type: 'Post',
			        data: formData,
			        cache: false,
			        contentType: false,
			        processData: false,
			        success: function (data) {

                        window.location.href = data.redirectTo

			        },
			        error: function (xhr, error, status) {
				        console.log(error, status);
			        }
		        });
	        });

        });

    </script>
}